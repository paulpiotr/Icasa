//------------------------------------------------------------------------------
// <auto-generated>
//     Ten kod został wygenerowany przez narzędzie.
//
//     Zmiany w tym pliku mogą spowodować niewłaściwe zachowanie i zostaną utracone
//     w przypadku ponownego wygenerowania kodu.
// </auto-generated>
//------------------------------------------------------------------------------

namespace IcasaReportService
{
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OperationResult", Namespace="http://ICASA.WebServices")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(IcasaReportService.TransactionBatchFileRequestResult))]
    public partial class OperationResult : object
    {
        
        private bool AsynchronousField;
        
        private string EntityIDInvolvedField;
        
        private IcasaReportService.EntityType EntityTypeInvolvedField;
        
        private IcasaReportService.ErrorType ErrorTypeField;
        
        private string FieldNameInvolvedField;
        
        private string MessageField;
        
        private bool OperationSuccessField;
        
        private int RequestIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Asynchronous
        {
            get
            {
                return this.AsynchronousField;
            }
            set
            {
                this.AsynchronousField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EntityIDInvolved
        {
            get
            {
                return this.EntityIDInvolvedField;
            }
            set
            {
                this.EntityIDInvolvedField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public IcasaReportService.EntityType EntityTypeInvolved
        {
            get
            {
                return this.EntityTypeInvolvedField;
            }
            set
            {
                this.EntityTypeInvolvedField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public IcasaReportService.ErrorType ErrorType
        {
            get
            {
                return this.ErrorTypeField;
            }
            set
            {
                this.ErrorTypeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FieldNameInvolved
        {
            get
            {
                return this.FieldNameInvolvedField;
            }
            set
            {
                this.FieldNameInvolvedField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message
        {
            get
            {
                return this.MessageField;
            }
            set
            {
                this.MessageField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool OperationSuccess
        {
            get
            {
                return this.OperationSuccessField;
            }
            set
            {
                this.OperationSuccessField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RequestID
        {
            get
            {
                return this.RequestIDField;
            }
            set
            {
                this.RequestIDField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TransactionBatchFileRequestResult", Namespace="http://ICASA.WebServices")]
    public partial class TransactionBatchFileRequestResult : IcasaReportService.OperationResult
    {
        
        private byte[] XMLTransactionFileField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] XMLTransactionFile
        {
            get
            {
                return this.XMLTransactionFileField;
            }
            set
            {
                this.XMLTransactionFileField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EntityType", Namespace="http://schemas.datacontract.org/2004/07/ICASA.WebServices.DataContracts.Enums")]
    public enum EntityType : int
    {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Debtor = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CardHolder = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Card = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Company = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CreditLimitSet = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ProductSet = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Store = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Employee = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CardIssuer = 9,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ErrorType", Namespace="http://schemas.datacontract.org/2004/07/ICASA.WebServices.DataContracts.Enums")]
    public enum ErrorType : int
    {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NoError = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GeneralError = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DuplicateData = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MissingRequiredField = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FieldValidationError = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AccessDenied = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ServerError = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CollectionCannotBeChanged = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FieldCannotBeChanged = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IDFieldMismatch = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UseSecurityMethods = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ConsolidationNotFound = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IllegalRequestId = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CannotUseLimitsAndLimitSet = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DataNoLongerPresent = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OnlyCreditCardsAllowed = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NotFound = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AlreadyBlocked = 17,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IsNotBlocked = 18,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BatchLimitExceeded = 19,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UseAsyncCall = 20,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        StillRunning = 21,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DoneResultAvailable = 22,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DoneNoResultAvailable = 23,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BatchNotFound = 24,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TooManyProcesses = 25,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://ICASA.WebServices", ConfigurationName="IcasaReportService.IReportService")]
    public interface IReportService
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ICASA.WebServices/IReportService/GetVersion", ReplyAction="http://ICASA.WebServices/IReportService/GetVersionResponse")]
        System.Threading.Tasks.Task<string> GetVersionAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ICASA.WebServices/IReportService/GetTransactionBatch", ReplyAction="http://ICASA.WebServices/IReportService/GetTransactionBatchResponse")]
        System.Threading.Tasks.Task<IcasaReportService.TransactionBatchFileRequestResult> GetTransactionBatchAsync(int ConsolidationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ICASA.WebServices/IReportService/GetLatestTransactionBatches", ReplyAction="http://ICASA.WebServices/IReportService/GetLatestTransactionBatchesResponse")]
        System.Threading.Tasks.Task<IcasaReportService.TransactionBatchFileRequestResult> GetLatestTransactionBatchesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ICASA.WebServices/IReportService/GetLatestTransactionBatchesAsynchronous", ReplyAction="http://ICASA.WebServices/IReportService/GetLatestTransactionBatchesAsynchronousRe" +
            "sponse")]
        System.Threading.Tasks.Task<IcasaReportService.TransactionBatchFileRequestResult> GetLatestTransactionBatchesAsynchronousAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ICASA.WebServices/IReportService/GetLatestTransactionBatchesAsynchronousRe" +
            "sult", ReplyAction="http://ICASA.WebServices/IReportService/GetLatestTransactionBatchesAsynchronousRe" +
            "sultResponse")]
        System.Threading.Tasks.Task<IcasaReportService.TransactionBatchFileRequestResult> GetLatestTransactionBatchesAsynchronousResultAsync(int BatchID, bool IncludeResult);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    public interface IReportServiceChannel : IcasaReportService.IReportService, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    public partial class ReportServiceClient : System.ServiceModel.ClientBase<IcasaReportService.IReportService>, IcasaReportService.IReportService
    {
        
        /// <summary>
        /// Wdróż tę metodę częściową, aby skonfigurować punkt końcowy usługi.
        /// </summary>
        /// <param name="serviceEndpoint">Punkt końcowy do skonfigurowania</param>
        /// <param name="clientCredentials">Poświadczenia klienta</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public ReportServiceClient() : 
                base(ReportServiceClient.GetDefaultBinding(), ReportServiceClient.GetDefaultEndpointAddress())
        {
            this.Endpoint.Name = EndpointConfiguration.WsSecured.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ReportServiceClient(EndpointConfiguration endpointConfiguration) : 
                base(ReportServiceClient.GetBindingForEndpoint(endpointConfiguration), ReportServiceClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ReportServiceClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(ReportServiceClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ReportServiceClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(ReportServiceClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ReportServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public System.Threading.Tasks.Task<string> GetVersionAsync()
        {
            return base.Channel.GetVersionAsync();
        }
        
        public System.Threading.Tasks.Task<IcasaReportService.TransactionBatchFileRequestResult> GetTransactionBatchAsync(int ConsolidationID)
        {
            return base.Channel.GetTransactionBatchAsync(ConsolidationID);
        }
        
        public System.Threading.Tasks.Task<IcasaReportService.TransactionBatchFileRequestResult> GetLatestTransactionBatchesAsync()
        {
            return base.Channel.GetLatestTransactionBatchesAsync();
        }
        
        public System.Threading.Tasks.Task<IcasaReportService.TransactionBatchFileRequestResult> GetLatestTransactionBatchesAsynchronousAsync()
        {
            return base.Channel.GetLatestTransactionBatchesAsynchronousAsync();
        }
        
        public System.Threading.Tasks.Task<IcasaReportService.TransactionBatchFileRequestResult> GetLatestTransactionBatchesAsynchronousResultAsync(int BatchID, bool IncludeResult)
        {
            return base.Channel.GetLatestTransactionBatchesAsynchronousResultAsync(BatchID, IncludeResult);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.WsSecured))
            {
                System.ServiceModel.Channels.CustomBinding result = new System.ServiceModel.Channels.CustomBinding();
                System.ServiceModel.Channels.TransportSecurityBindingElement userNameOverTransportSecurityBindingElement = System.ServiceModel.Channels.SecurityBindingElement.CreateUserNameOverTransportBindingElement();
                userNameOverTransportSecurityBindingElement.MessageSecurityVersion = System.ServiceModel.MessageSecurityVersion.WSSecurity11WSTrustFebruary2005WSSecureConversationFebruary2005WSSecurityPolicy11BasicSecurityProfile10;
                result.Elements.Add(userNameOverTransportSecurityBindingElement);
                System.ServiceModel.Channels.TextMessageEncodingBindingElement textBindingElement = new System.ServiceModel.Channels.TextMessageEncodingBindingElement();
                result.Elements.Add(textBindingElement);
                System.ServiceModel.Channels.HttpsTransportBindingElement httpsBindingElement = new System.ServiceModel.Channels.HttpsTransportBindingElement();
                httpsBindingElement.AllowCookies = true;
                httpsBindingElement.MaxBufferSize = int.MaxValue;
                httpsBindingElement.MaxReceivedMessageSize = int.MaxValue;
                result.Elements.Add(httpsBindingElement);
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Nie można znaleźć punktu końcowego o nazwie „{0}”.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.WsSecured))
            {
                return new System.ServiceModel.EndpointAddress("https://soap.icasa-group.com/ReportServiceIcasa.svc/Soap");
            }
            throw new System.InvalidOperationException(string.Format("Nie można znaleźć punktu końcowego o nazwie „{0}”.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding()
        {
            return ReportServiceClient.GetBindingForEndpoint(EndpointConfiguration.WsSecured);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress()
        {
            return ReportServiceClient.GetEndpointAddress(EndpointConfiguration.WsSecured);
        }
        
        public enum EndpointConfiguration
        {
            
            WsSecured,
        }
    }
}

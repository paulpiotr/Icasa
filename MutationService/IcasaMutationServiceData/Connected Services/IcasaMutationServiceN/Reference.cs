//------------------------------------------------------------------------------
// <auto-generated>
//     Ten kod został wygenerowany przez narzędzie.
//
//     Zmiany w tym pliku mogą spowodować niewłaściwe zachowanie i zostaną utracone
//     w przypadku ponownego wygenerowania kodu.
// </auto-generated>
//------------------------------------------------------------------------------

namespace IcasaMutationServiceN
{
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://ICASA.WebServices", ConfigurationName="IcasaMutationServiceN.IMutationService")]
    public interface IMutationService
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ICASA.WebServices/IMutationService/GetVersion", ReplyAction="http://ICASA.WebServices/IMutationService/GetVersionResponse")]
        string GetVersion();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ICASA.WebServices/IMutationService/GetVersion", ReplyAction="http://ICASA.WebServices/IMutationService/GetVersionResponse")]
        System.Threading.Tasks.Task<string> GetVersionAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ICASA.WebServices/IMutationService/AddDebtors", ReplyAction="http://ICASA.WebServices/IMutationService/AddDebtorsResponse")]
        string AddDebtors();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ICASA.WebServices/IMutationService/AddDebtors", ReplyAction="http://ICASA.WebServices/IMutationService/AddDebtorsResponse")]
        System.Threading.Tasks.Task<string> AddDebtorsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ICASA.WebServices/IMutationService/AddCardHolders", ReplyAction="http://ICASA.WebServices/IMutationService/AddCardHoldersResponse")]
        string AddCardHolders();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ICASA.WebServices/IMutationService/AddCardHolders", ReplyAction="http://ICASA.WebServices/IMutationService/AddCardHoldersResponse")]
        System.Threading.Tasks.Task<string> AddCardHoldersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ICASA.WebServices/IMutationService/AddCards", ReplyAction="http://ICASA.WebServices/IMutationService/AddCardsResponse")]
        string AddCards();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ICASA.WebServices/IMutationService/AddCards", ReplyAction="http://ICASA.WebServices/IMutationService/AddCardsResponse")]
        System.Threading.Tasks.Task<string> AddCardsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ICASA.WebServices/IMutationService/AddCardsWithoutCardHolder", ReplyAction="http://ICASA.WebServices/IMutationService/AddCardsWithoutCardHolderResponse")]
        string AddCardsWithoutCardHolder();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ICASA.WebServices/IMutationService/AddCardsWithoutCardHolder", ReplyAction="http://ICASA.WebServices/IMutationService/AddCardsWithoutCardHolderResponse")]
        System.Threading.Tasks.Task<string> AddCardsWithoutCardHolderAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ICASA.WebServices/IMutationService/ChangeDebtor", ReplyAction="http://ICASA.WebServices/IMutationService/ChangeDebtorResponse")]
        string ChangeDebtor();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ICASA.WebServices/IMutationService/ChangeDebtor", ReplyAction="http://ICASA.WebServices/IMutationService/ChangeDebtorResponse")]
        System.Threading.Tasks.Task<string> ChangeDebtorAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ICASA.WebServices/IMutationService/ChangeCardHolder", ReplyAction="http://ICASA.WebServices/IMutationService/ChangeCardHolderResponse")]
        string ChangeCardHolder();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ICASA.WebServices/IMutationService/ChangeCardHolder", ReplyAction="http://ICASA.WebServices/IMutationService/ChangeCardHolderResponse")]
        System.Threading.Tasks.Task<string> ChangeCardHolderAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ICASA.WebServices/IMutationService/ChangeCard", ReplyAction="http://ICASA.WebServices/IMutationService/ChangeCardResponse")]
        string ChangeCard();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ICASA.WebServices/IMutationService/ChangeCard", ReplyAction="http://ICASA.WebServices/IMutationService/ChangeCardResponse")]
        System.Threading.Tasks.Task<string> ChangeCardAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ICASA.WebServices/IMutationService/MergeDebtors", ReplyAction="http://ICASA.WebServices/IMutationService/MergeDebtorsResponse")]
        string MergeDebtors();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ICASA.WebServices/IMutationService/MergeDebtors", ReplyAction="http://ICASA.WebServices/IMutationService/MergeDebtorsResponse")]
        System.Threading.Tasks.Task<string> MergeDebtorsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ICASA.WebServices/IMutationService/BlockCard", ReplyAction="http://ICASA.WebServices/IMutationService/BlockCardResponse")]
        string BlockCard();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ICASA.WebServices/IMutationService/BlockCard", ReplyAction="http://ICASA.WebServices/IMutationService/BlockCardResponse")]
        System.Threading.Tasks.Task<string> BlockCardAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ICASA.WebServices/IMutationService/DeblockCard", ReplyAction="http://ICASA.WebServices/IMutationService/DeblockCardResponse")]
        string DeblockCard();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ICASA.WebServices/IMutationService/DeblockCard", ReplyAction="http://ICASA.WebServices/IMutationService/DeblockCardResponse")]
        System.Threading.Tasks.Task<string> DeblockCardAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ICASA.WebServices/IMutationService/BlockDebtor", ReplyAction="http://ICASA.WebServices/IMutationService/BlockDebtorResponse")]
        string BlockDebtor();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ICASA.WebServices/IMutationService/BlockDebtor", ReplyAction="http://ICASA.WebServices/IMutationService/BlockDebtorResponse")]
        System.Threading.Tasks.Task<string> BlockDebtorAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ICASA.WebServices/IMutationService/DeblockDebtor", ReplyAction="http://ICASA.WebServices/IMutationService/DeblockDebtorResponse")]
        string DeblockDebtor();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ICASA.WebServices/IMutationService/DeblockDebtor", ReplyAction="http://ICASA.WebServices/IMutationService/DeblockDebtorResponse")]
        System.Threading.Tasks.Task<string> DeblockDebtorAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ICASA.WebServices/IMutationService/GetDebtors", ReplyAction="http://ICASA.WebServices/IMutationService/GetDebtorsResponse")]
        string GetDebtors();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ICASA.WebServices/IMutationService/GetDebtors", ReplyAction="http://ICASA.WebServices/IMutationService/GetDebtorsResponse")]
        System.Threading.Tasks.Task<string> GetDebtorsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ICASA.WebServices/IMutationService/GetCardHolders", ReplyAction="http://ICASA.WebServices/IMutationService/GetCardHoldersResponse")]
        string GetCardHolders();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ICASA.WebServices/IMutationService/GetCardHolders", ReplyAction="http://ICASA.WebServices/IMutationService/GetCardHoldersResponse")]
        System.Threading.Tasks.Task<string> GetCardHoldersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ICASA.WebServices/IMutationService/GetCards", ReplyAction="http://ICASA.WebServices/IMutationService/GetCardsResponse")]
        string GetCards();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ICASA.WebServices/IMutationService/GetCards", ReplyAction="http://ICASA.WebServices/IMutationService/GetCardsResponse")]
        System.Threading.Tasks.Task<string> GetCardsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ICASA.WebServices/IMutationService/GetStores", ReplyAction="http://ICASA.WebServices/IMutationService/GetStoresResponse")]
        string GetStores();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ICASA.WebServices/IMutationService/GetStores", ReplyAction="http://ICASA.WebServices/IMutationService/GetStoresResponse")]
        System.Threading.Tasks.Task<string> GetStoresAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ICASA.WebServices/IMutationService/GetTerminals", ReplyAction="http://ICASA.WebServices/IMutationService/GetTerminalsResponse")]
        string GetTerminals();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ICASA.WebServices/IMutationService/GetTerminals", ReplyAction="http://ICASA.WebServices/IMutationService/GetTerminalsResponse")]
        System.Threading.Tasks.Task<string> GetTerminalsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ICASA.WebServices/IMutationService/GetCompanies", ReplyAction="http://ICASA.WebServices/IMutationService/GetCompaniesResponse")]
        string GetCompanies();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ICASA.WebServices/IMutationService/GetCompanies", ReplyAction="http://ICASA.WebServices/IMutationService/GetCompaniesResponse")]
        System.Threading.Tasks.Task<string> GetCompaniesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ICASA.WebServices/IMutationService/GetCardIssuers", ReplyAction="http://ICASA.WebServices/IMutationService/GetCardIssuersResponse")]
        string GetCardIssuers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ICASA.WebServices/IMutationService/GetCardIssuers", ReplyAction="http://ICASA.WebServices/IMutationService/GetCardIssuersResponse")]
        System.Threading.Tasks.Task<string> GetCardIssuersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ICASA.WebServices/IMutationService/GetEmployees", ReplyAction="http://ICASA.WebServices/IMutationService/GetEmployeesResponse")]
        string GetEmployees();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ICASA.WebServices/IMutationService/GetEmployees", ReplyAction="http://ICASA.WebServices/IMutationService/GetEmployeesResponse")]
        System.Threading.Tasks.Task<string> GetEmployeesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ICASA.WebServices/IMutationService/GetProductSets", ReplyAction="http://ICASA.WebServices/IMutationService/GetProductSetsResponse")]
        string GetProductSets();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ICASA.WebServices/IMutationService/GetProductSets", ReplyAction="http://ICASA.WebServices/IMutationService/GetProductSetsResponse")]
        System.Threading.Tasks.Task<string> GetProductSetsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ICASA.WebServices/IMutationService/GetCreditLimitSets", ReplyAction="http://ICASA.WebServices/IMutationService/GetCreditLimitSetsResponse")]
        string GetCreditLimitSets();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ICASA.WebServices/IMutationService/GetCreditLimitSets", ReplyAction="http://ICASA.WebServices/IMutationService/GetCreditLimitSetsResponse")]
        System.Threading.Tasks.Task<string> GetCreditLimitSetsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ICASA.WebServices/IMutationService/GetStoreClusters", ReplyAction="http://ICASA.WebServices/IMutationService/GetStoreClustersResponse")]
        string GetStoreClusters();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ICASA.WebServices/IMutationService/GetStoreClusters", ReplyAction="http://ICASA.WebServices/IMutationService/GetStoreClustersResponse")]
        System.Threading.Tasks.Task<string> GetStoreClustersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ICASA.WebServices/IMutationService/GetCardLayouts", ReplyAction="http://ICASA.WebServices/IMutationService/GetCardLayoutsResponse")]
        string GetCardLayouts();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ICASA.WebServices/IMutationService/GetCardLayouts", ReplyAction="http://ICASA.WebServices/IMutationService/GetCardLayoutsResponse")]
        System.Threading.Tasks.Task<string> GetCardLayoutsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ICASA.WebServices/IMutationService/GetAllChangedEntitiesSince", ReplyAction="http://ICASA.WebServices/IMutationService/GetAllChangedEntitiesSinceResponse")]
        string GetAllChangedEntitiesSince();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ICASA.WebServices/IMutationService/GetAllChangedEntitiesSince", ReplyAction="http://ICASA.WebServices/IMutationService/GetAllChangedEntitiesSinceResponse")]
        System.Threading.Tasks.Task<string> GetAllChangedEntitiesSinceAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ICASA.WebServices/IMutationService/GetReservedCardNumberStatus", ReplyAction="http://ICASA.WebServices/IMutationService/GetReservedCardNumberStatusResponse")]
        string GetReservedCardNumberStatus();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ICASA.WebServices/IMutationService/GetReservedCardNumberStatus", ReplyAction="http://ICASA.WebServices/IMutationService/GetReservedCardNumberStatusResponse")]
        System.Threading.Tasks.Task<string> GetReservedCardNumberStatusAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ICASA.WebServices/IMutationService/IncreaseOverallLimit", ReplyAction="http://ICASA.WebServices/IMutationService/IncreaseOverallLimitResponse")]
        string IncreaseOverallLimit();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ICASA.WebServices/IMutationService/IncreaseOverallLimit", ReplyAction="http://ICASA.WebServices/IMutationService/IncreaseOverallLimitResponse")]
        System.Threading.Tasks.Task<string> IncreaseOverallLimitAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ICASA.WebServices/IMutationService/DecreaseOverallLimit", ReplyAction="http://ICASA.WebServices/IMutationService/DecreaseOverallLimitResponse")]
        string DecreaseOverallLimit();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ICASA.WebServices/IMutationService/DecreaseOverallLimit", ReplyAction="http://ICASA.WebServices/IMutationService/DecreaseOverallLimitResponse")]
        System.Threading.Tasks.Task<string> DecreaseOverallLimitAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    public interface IMutationServiceChannel : IcasaMutationServiceN.IMutationService, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    public partial class MutationServiceClient : System.ServiceModel.ClientBase<IcasaMutationServiceN.IMutationService>, IcasaMutationServiceN.IMutationService
    {
        
        /// <summary>
        /// Wdróż tę metodę częściową, aby skonfigurować punkt końcowy usługi.
        /// </summary>
        /// <param name="serviceEndpoint">Punkt końcowy do skonfigurowania</param>
        /// <param name="clientCredentials">Poświadczenia klienta</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public MutationServiceClient() : 
                base(MutationServiceClient.GetDefaultBinding(), MutationServiceClient.GetDefaultEndpointAddress())
        {
            this.Endpoint.Name = EndpointConfiguration.Secured.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public MutationServiceClient(EndpointConfiguration endpointConfiguration) : 
                base(MutationServiceClient.GetBindingForEndpoint(endpointConfiguration), MutationServiceClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public MutationServiceClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(MutationServiceClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public MutationServiceClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(MutationServiceClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public MutationServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public string GetVersion()
        {
            return base.Channel.GetVersion();
        }
        
        public System.Threading.Tasks.Task<string> GetVersionAsync()
        {
            return base.Channel.GetVersionAsync();
        }
        
        public string AddDebtors()
        {
            return base.Channel.AddDebtors();
        }
        
        public System.Threading.Tasks.Task<string> AddDebtorsAsync()
        {
            return base.Channel.AddDebtorsAsync();
        }
        
        public string AddCardHolders()
        {
            return base.Channel.AddCardHolders();
        }
        
        public System.Threading.Tasks.Task<string> AddCardHoldersAsync()
        {
            return base.Channel.AddCardHoldersAsync();
        }
        
        public string AddCards()
        {
            return base.Channel.AddCards();
        }
        
        public System.Threading.Tasks.Task<string> AddCardsAsync()
        {
            return base.Channel.AddCardsAsync();
        }
        
        public string AddCardsWithoutCardHolder()
        {
            return base.Channel.AddCardsWithoutCardHolder();
        }
        
        public System.Threading.Tasks.Task<string> AddCardsWithoutCardHolderAsync()
        {
            return base.Channel.AddCardsWithoutCardHolderAsync();
        }
        
        public string ChangeDebtor()
        {
            return base.Channel.ChangeDebtor();
        }
        
        public System.Threading.Tasks.Task<string> ChangeDebtorAsync()
        {
            return base.Channel.ChangeDebtorAsync();
        }
        
        public string ChangeCardHolder()
        {
            return base.Channel.ChangeCardHolder();
        }
        
        public System.Threading.Tasks.Task<string> ChangeCardHolderAsync()
        {
            return base.Channel.ChangeCardHolderAsync();
        }
        
        public string ChangeCard()
        {
            return base.Channel.ChangeCard();
        }
        
        public System.Threading.Tasks.Task<string> ChangeCardAsync()
        {
            return base.Channel.ChangeCardAsync();
        }
        
        public string MergeDebtors()
        {
            return base.Channel.MergeDebtors();
        }
        
        public System.Threading.Tasks.Task<string> MergeDebtorsAsync()
        {
            return base.Channel.MergeDebtorsAsync();
        }
        
        public string BlockCard()
        {
            return base.Channel.BlockCard();
        }
        
        public System.Threading.Tasks.Task<string> BlockCardAsync()
        {
            return base.Channel.BlockCardAsync();
        }
        
        public string DeblockCard()
        {
            return base.Channel.DeblockCard();
        }
        
        public System.Threading.Tasks.Task<string> DeblockCardAsync()
        {
            return base.Channel.DeblockCardAsync();
        }
        
        public string BlockDebtor()
        {
            return base.Channel.BlockDebtor();
        }
        
        public System.Threading.Tasks.Task<string> BlockDebtorAsync()
        {
            return base.Channel.BlockDebtorAsync();
        }
        
        public string DeblockDebtor()
        {
            return base.Channel.DeblockDebtor();
        }
        
        public System.Threading.Tasks.Task<string> DeblockDebtorAsync()
        {
            return base.Channel.DeblockDebtorAsync();
        }
        
        public string GetDebtors()
        {
            return base.Channel.GetDebtors();
        }
        
        public System.Threading.Tasks.Task<string> GetDebtorsAsync()
        {
            return base.Channel.GetDebtorsAsync();
        }
        
        public string GetCardHolders()
        {
            return base.Channel.GetCardHolders();
        }
        
        public System.Threading.Tasks.Task<string> GetCardHoldersAsync()
        {
            return base.Channel.GetCardHoldersAsync();
        }
        
        public string GetCards()
        {
            return base.Channel.GetCards();
        }
        
        public System.Threading.Tasks.Task<string> GetCardsAsync()
        {
            return base.Channel.GetCardsAsync();
        }
        
        public string GetStores()
        {
            return base.Channel.GetStores();
        }
        
        public System.Threading.Tasks.Task<string> GetStoresAsync()
        {
            return base.Channel.GetStoresAsync();
        }
        
        public string GetTerminals()
        {
            return base.Channel.GetTerminals();
        }
        
        public System.Threading.Tasks.Task<string> GetTerminalsAsync()
        {
            return base.Channel.GetTerminalsAsync();
        }
        
        public string GetCompanies()
        {
            return base.Channel.GetCompanies();
        }
        
        public System.Threading.Tasks.Task<string> GetCompaniesAsync()
        {
            return base.Channel.GetCompaniesAsync();
        }
        
        public string GetCardIssuers()
        {
            return base.Channel.GetCardIssuers();
        }
        
        public System.Threading.Tasks.Task<string> GetCardIssuersAsync()
        {
            return base.Channel.GetCardIssuersAsync();
        }
        
        public string GetEmployees()
        {
            return base.Channel.GetEmployees();
        }
        
        public System.Threading.Tasks.Task<string> GetEmployeesAsync()
        {
            return base.Channel.GetEmployeesAsync();
        }
        
        public string GetProductSets()
        {
            return base.Channel.GetProductSets();
        }
        
        public System.Threading.Tasks.Task<string> GetProductSetsAsync()
        {
            return base.Channel.GetProductSetsAsync();
        }
        
        public string GetCreditLimitSets()
        {
            return base.Channel.GetCreditLimitSets();
        }
        
        public System.Threading.Tasks.Task<string> GetCreditLimitSetsAsync()
        {
            return base.Channel.GetCreditLimitSetsAsync();
        }
        
        public string GetStoreClusters()
        {
            return base.Channel.GetStoreClusters();
        }
        
        public System.Threading.Tasks.Task<string> GetStoreClustersAsync()
        {
            return base.Channel.GetStoreClustersAsync();
        }
        
        public string GetCardLayouts()
        {
            return base.Channel.GetCardLayouts();
        }
        
        public System.Threading.Tasks.Task<string> GetCardLayoutsAsync()
        {
            return base.Channel.GetCardLayoutsAsync();
        }
        
        public string GetAllChangedEntitiesSince()
        {
            return base.Channel.GetAllChangedEntitiesSince();
        }
        
        public System.Threading.Tasks.Task<string> GetAllChangedEntitiesSinceAsync()
        {
            return base.Channel.GetAllChangedEntitiesSinceAsync();
        }
        
        public string GetReservedCardNumberStatus()
        {
            return base.Channel.GetReservedCardNumberStatus();
        }
        
        public System.Threading.Tasks.Task<string> GetReservedCardNumberStatusAsync()
        {
            return base.Channel.GetReservedCardNumberStatusAsync();
        }
        
        public string IncreaseOverallLimit()
        {
            return base.Channel.IncreaseOverallLimit();
        }
        
        public System.Threading.Tasks.Task<string> IncreaseOverallLimitAsync()
        {
            return base.Channel.IncreaseOverallLimitAsync();
        }
        
        public string DecreaseOverallLimit()
        {
            return base.Channel.DecreaseOverallLimit();
        }
        
        public System.Threading.Tasks.Task<string> DecreaseOverallLimitAsync()
        {
            return base.Channel.DecreaseOverallLimitAsync();
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.Secured))
            {
                System.ServiceModel.Channels.CustomBinding result = new System.ServiceModel.Channels.CustomBinding();
                System.ServiceModel.Channels.TextMessageEncodingBindingElement textBindingElement = new System.ServiceModel.Channels.TextMessageEncodingBindingElement();
                result.Elements.Add(textBindingElement);

                //WcfCoreMtomEncoder.MtomMessageEncoderBindingElement mtomMessageEncoderBindingElement = new WcfCoreMtomEncoder.MtomMessageEncoderBindingElement(textBindingElement);
                //result.Elements.Add(mtomMessageEncoderBindingElement);

                System.ServiceModel.Channels.HttpsTransportBindingElement httpsBindingElement = new System.ServiceModel.Channels.HttpsTransportBindingElement();
                httpsBindingElement.AllowCookies = true;
                httpsBindingElement.MaxBufferSize = int.MaxValue;
                httpsBindingElement.MaxReceivedMessageSize = int.MaxValue;
                result.Elements.Add(httpsBindingElement);
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Nie można znaleźć punktu końcowego o nazwie „{0}”.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.Secured))
            {
                return new System.ServiceModel.EndpointAddress("https://soap.icasa-group.com/MutationServiceIcasa2.svc/Soap");
            }
            throw new System.InvalidOperationException(string.Format("Nie można znaleźć punktu końcowego o nazwie „{0}”.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding()
        {
            return MutationServiceClient.GetBindingForEndpoint(EndpointConfiguration.Secured);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress()
        {
            return MutationServiceClient.GetEndpointAddress(EndpointConfiguration.Secured);
        }
        
        public enum EndpointConfiguration
        {
            
            Secured,
        }
    }
}
